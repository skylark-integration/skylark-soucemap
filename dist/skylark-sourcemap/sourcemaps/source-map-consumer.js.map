{"version":3,"sources":["source-map-consumer.js"],"names":["define","util","binarySearch","ArraySet","base64VLQ","quickSort","SourceMapConsumer","aSourceMap","aSourceMapURL","sourceMap","parseSourceMapInput","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","version","getArg","sources","names","sourceRoot","sourcesContent","mappings","file","this","_version","Error","normalize","map","String","source","isAbsolute","relative","_names","fromArray","_sources","_absoluteSources","toArray","s","computeSourceURL","_mappings","_sourceMapURL","Mapping","generatedLine","generatedColumn","originalLine","originalColumn","name","lastOffset","line","column","_sections","url","offset","offsetLine","offsetColumn","generatedOffset","consumer","fromSourceMap","prototype","__generatedMappings","Object","defineProperty","configurable","enumerable","get","_parseMappings","__originalMappings","_charIsMappingSeparator","aStr","index","c","charAt","aSourceRoot","GENERATED_ORDER","ORIGINAL_ORDER","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","eachMapping","aCallback","aContext","aOrder","context","_generatedMappings","_originalMappings","mapping","at","forEach","allGeneratedPositionsFor","aArgs","needle","_findSourceIndex","_findMapping","compareByOriginalPositions","undefined","push","lastColumn","create","aSource","i","relativeSource","has","indexOf","length","smc","_sourceRoot","_generateSourcesContent","_file","generatedMappings","slice","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","str","segment","end","value","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","temp","originalMappings","decode","rest","compareByGeneratedPositionsDeflated","aNeedle","aMappings","aLineName","aColumnName","aComparator","aBias","TypeError","search","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","originalPositionFor","hasContentsOfAllSources","size","some","sc","sourceContentFor","nullOnMissing","urlParse","fileUriAbsPath","replace","scheme","path","generatedPositionFor","constructor","j","sectionIndex","section","cmp","bias","every","content","generatedPosition","sectionMappings","add","adjustedMapping"],"mappings":"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","file":"../source-map-consumer.js","sourcesContent":["define([\n    './util',\n    './binary-search',\n    './array-set',\n    './base64-vlq',\n    './quick-sort'\n], function (util, binarySearch, ArraySet, base64VLQ, quickSort) {\n    'use strict';\n\n    function SourceMapConsumer(aSourceMap, aSourceMapURL) {\n        var sourceMap = aSourceMap;\n        if (typeof aSourceMap === 'string') {\n            sourceMap = util.parseSourceMapInput(aSourceMap);\n        }\n        return sourceMap.sections != null ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL) : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n    }\n\n    SourceMapConsumer.fromSourceMap = function (aSourceMap, aSourceMapURL) {\n        return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n    };\n\n    SourceMapConsumer.prototype._version = 3;\n\n    SourceMapConsumer.prototype.__generatedMappings = null;\n\n    Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            if (!this.__generatedMappings) {\n                this._parseMappings(this._mappings, this.sourceRoot);\n            }\n            return this.__generatedMappings;\n        }\n    });\n\n    SourceMapConsumer.prototype.__originalMappings = null;\n\n    Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            if (!this.__originalMappings) {\n                this._parseMappings(this._mappings, this.sourceRoot);\n            }\n            return this.__originalMappings;\n        }\n    });\n\n    SourceMapConsumer.prototype._charIsMappingSeparator = function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n        var c = aStr.charAt(index);\n        return c === ';' || c === ',';\n    };\n\n    SourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n        throw new Error('Subclasses must implement _parseMappings');\n    };\n\n    SourceMapConsumer.GENERATED_ORDER = 1;\n    SourceMapConsumer.ORIGINAL_ORDER = 2;\n    SourceMapConsumer.GREATEST_LOWER_BOUND = 1;\n    SourceMapConsumer.LEAST_UPPER_BOUND = 2;\n    SourceMapConsumer.prototype.eachMapping = function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n        var context = aContext || null;\n        var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n        var mappings;\n        switch (order) {\n        case SourceMapConsumer.GENERATED_ORDER:\n            mappings = this._generatedMappings;\n            break;\n        case SourceMapConsumer.ORIGINAL_ORDER:\n            mappings = this._originalMappings;\n            break;\n        default:\n            throw new Error('Unknown order of iteration.');\n        }\n        var sourceRoot = this.sourceRoot;\n        mappings.map(function (mapping) {\n            var source = mapping.source === null ? null : this._sources.at(mapping.source);\n            source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n            return {\n                source: source,\n                generatedLine: mapping.generatedLine,\n                generatedColumn: mapping.generatedColumn,\n                originalLine: mapping.originalLine,\n                originalColumn: mapping.originalColumn,\n                name: mapping.name === null ? null : this._names.at(mapping.name)\n            };\n        }, this).forEach(aCallback, context);\n    };\n    SourceMapConsumer.prototype.allGeneratedPositionsFor = function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n        var line = util.getArg(aArgs, 'line');\n        var needle = {\n            source: util.getArg(aArgs, 'source'),\n            originalLine: line,\n            originalColumn: util.getArg(aArgs, 'column', 0)\n        };\n        needle.source = this._findSourceIndex(needle.source);\n        if (needle.source < 0) {\n            return [];\n        }\n        var mappings = [];\n        var index = this._findMapping(needle, this._originalMappings, 'originalLine', 'originalColumn', util.compareByOriginalPositions, binarySearch.LEAST_UPPER_BOUND);\n        if (index >= 0) {\n            var mapping = this._originalMappings[index];\n            if (aArgs.column === undefined) {\n                var originalLine = mapping.originalLine;\n                while (mapping && mapping.originalLine === originalLine) {\n                    mappings.push({\n                        line: util.getArg(mapping, 'generatedLine', null),\n                        column: util.getArg(mapping, 'generatedColumn', null),\n                        lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n                    });\n                    mapping = this._originalMappings[++index];\n                }\n            } else {\n                var originalColumn = mapping.originalColumn;\n                while (mapping && mapping.originalLine === line && mapping.originalColumn == originalColumn) {\n                    mappings.push({\n                        line: util.getArg(mapping, 'generatedLine', null),\n                        column: util.getArg(mapping, 'generatedColumn', null),\n                        lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n                    });\n                    mapping = this._originalMappings[++index];\n                }\n            }\n        }\n        return mappings;\n    };\n\n    function BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n        var sourceMap = aSourceMap;\n        if (typeof aSourceMap === 'string') {\n            sourceMap = util.parseSourceMapInput(aSourceMap);\n        }\n        var version = util.getArg(sourceMap, 'version');\n        var sources = util.getArg(sourceMap, 'sources');\n        var names = util.getArg(sourceMap, 'names', []);\n        var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n        var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n        var mappings = util.getArg(sourceMap, 'mappings');\n        var file = util.getArg(sourceMap, 'file', null);\n        if (version != this._version) {\n            throw new Error('Unsupported version: ' + version);\n        }\n        if (sourceRoot) {\n            sourceRoot = util.normalize(sourceRoot);\n        }\n        sources = sources.map(String).map(util.normalize).map(function (source) {\n            return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source) ? util.relative(sourceRoot, source) : source;\n        });\n        this._names = ArraySet.fromArray(names.map(String), true);\n        this._sources = ArraySet.fromArray(sources, true);\n        this._absoluteSources = this._sources.toArray().map(function (s) {\n            return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n        });\n        this.sourceRoot = sourceRoot;\n        this.sourcesContent = sourcesContent;\n        this._mappings = mappings;\n        this._sourceMapURL = aSourceMapURL;\n        this.file = file;\n    }\n    BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n    BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n    BasicSourceMapConsumer.prototype._findSourceIndex = function (aSource) {\n        var relativeSource = aSource;\n        if (this.sourceRoot != null) {\n            relativeSource = util.relative(this.sourceRoot, relativeSource);\n        }\n        if (this._sources.has(relativeSource)) {\n            return this._sources.indexOf(relativeSource);\n        }\n        var i;\n        for (i = 0; i < this._absoluteSources.length; ++i) {\n            if (this._absoluteSources[i] == aSource) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    BasicSourceMapConsumer.fromSourceMap = function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n        var smc = Object.create(BasicSourceMapConsumer.prototype);\n        var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n        var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n        smc.sourceRoot = aSourceMap._sourceRoot;\n        smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(), smc.sourceRoot);\n        smc.file = aSourceMap._file;\n        smc._sourceMapURL = aSourceMapURL;\n        smc._absoluteSources = smc._sources.toArray().map(function (s) {\n            return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n        });\n        var generatedMappings = aSourceMap._mappings.toArray().slice();\n        var destGeneratedMappings = smc.__generatedMappings = [];\n        var destOriginalMappings = smc.__originalMappings = [];\n        for (var i = 0, length = generatedMappings.length; i < length; i++) {\n            var srcMapping = generatedMappings[i];\n            var destMapping = new Mapping();\n            destMapping.generatedLine = srcMapping.generatedLine;\n            destMapping.generatedColumn = srcMapping.generatedColumn;\n            if (srcMapping.source) {\n                destMapping.source = sources.indexOf(srcMapping.source);\n                destMapping.originalLine = srcMapping.originalLine;\n                destMapping.originalColumn = srcMapping.originalColumn;\n                if (srcMapping.name) {\n                    destMapping.name = names.indexOf(srcMapping.name);\n                }\n                destOriginalMappings.push(destMapping);\n            }\n            destGeneratedMappings.push(destMapping);\n        }\n        quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n        return smc;\n    };\n    BasicSourceMapConsumer.prototype._version = 3;\n    Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n        get: function () {\n            return this._absoluteSources.slice();\n        }\n    });\n    function Mapping() {\n        this.generatedLine = 0;\n        this.generatedColumn = 0;\n        this.source = null;\n        this.originalLine = null;\n        this.originalColumn = null;\n        this.name = null;\n    }\n    BasicSourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n        var generatedLine = 1;\n        var previousGeneratedColumn = 0;\n        var previousOriginalLine = 0;\n        var previousOriginalColumn = 0;\n        var previousSource = 0;\n        var previousName = 0;\n        var length = aStr.length;\n        var index = 0;\n        var cachedSegments = {};\n        var temp = {};\n        var originalMappings = [];\n        var generatedMappings = [];\n        var mapping, str, segment, end, value;\n        while (index < length) {\n            if (aStr.charAt(index) === ';') {\n                generatedLine++;\n                index++;\n                previousGeneratedColumn = 0;\n            } else if (aStr.charAt(index) === ',') {\n                index++;\n            } else {\n                mapping = new Mapping();\n                mapping.generatedLine = generatedLine;\n                for (end = index; end < length; end++) {\n                    if (this._charIsMappingSeparator(aStr, end)) {\n                        break;\n                    }\n                }\n                str = aStr.slice(index, end);\n                segment = cachedSegments[str];\n                if (segment) {\n                    index += str.length;\n                } else {\n                    segment = [];\n                    while (index < end) {\n                        base64VLQ.decode(aStr, index, temp);\n                        value = temp.value;\n                        index = temp.rest;\n                        segment.push(value);\n                    }\n                    if (segment.length === 2) {\n                        throw new Error('Found a source, but no line and column');\n                    }\n                    if (segment.length === 3) {\n                        throw new Error('Found a source and line, but no column');\n                    }\n                    cachedSegments[str] = segment;\n                }\n                mapping.generatedColumn = previousGeneratedColumn + segment[0];\n                previousGeneratedColumn = mapping.generatedColumn;\n                if (segment.length > 1) {\n                    mapping.source = previousSource + segment[1];\n                    previousSource += segment[1];\n                    mapping.originalLine = previousOriginalLine + segment[2];\n                    previousOriginalLine = mapping.originalLine;\n                    mapping.originalLine += 1;\n                    mapping.originalColumn = previousOriginalColumn + segment[3];\n                    previousOriginalColumn = mapping.originalColumn;\n                    if (segment.length > 4) {\n                        mapping.name = previousName + segment[4];\n                        previousName += segment[4];\n                    }\n                }\n                generatedMappings.push(mapping);\n                if (typeof mapping.originalLine === 'number') {\n                    originalMappings.push(mapping);\n                }\n            }\n        }\n        quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n        this.__generatedMappings = generatedMappings;\n        quickSort(originalMappings, util.compareByOriginalPositions);\n        this.__originalMappings = originalMappings;\n    };\n    BasicSourceMapConsumer.prototype._findMapping = function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName, aColumnName, aComparator, aBias) {\n        if (aNeedle[aLineName] <= 0) {\n            throw new TypeError('Line must be greater than or equal to 1, got ' + aNeedle[aLineName]);\n        }\n        if (aNeedle[aColumnName] < 0) {\n            throw new TypeError('Column must be greater than or equal to 0, got ' + aNeedle[aColumnName]);\n        }\n        return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n    };\n    BasicSourceMapConsumer.prototype.computeColumnSpans = function SourceMapConsumer_computeColumnSpans() {\n        for (var index = 0; index < this._generatedMappings.length; ++index) {\n            var mapping = this._generatedMappings[index];\n            if (index + 1 < this._generatedMappings.length) {\n                var nextMapping = this._generatedMappings[index + 1];\n                if (mapping.generatedLine === nextMapping.generatedLine) {\n                    mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n                    continue;\n                }\n            }\n            mapping.lastGeneratedColumn = Infinity;\n        }\n    };\n    BasicSourceMapConsumer.prototype.originalPositionFor = function SourceMapConsumer_originalPositionFor(aArgs) {\n        var needle = {\n            generatedLine: util.getArg(aArgs, 'line'),\n            generatedColumn: util.getArg(aArgs, 'column')\n        };\n        var index = this._findMapping(needle, this._generatedMappings, 'generatedLine', 'generatedColumn', util.compareByGeneratedPositionsDeflated, util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND));\n        if (index >= 0) {\n            var mapping = this._generatedMappings[index];\n            if (mapping.generatedLine === needle.generatedLine) {\n                var source = util.getArg(mapping, 'source', null);\n                if (source !== null) {\n                    source = this._sources.at(source);\n                    source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n                }\n                var name = util.getArg(mapping, 'name', null);\n                if (name !== null) {\n                    name = this._names.at(name);\n                }\n                return {\n                    source: source,\n                    line: util.getArg(mapping, 'originalLine', null),\n                    column: util.getArg(mapping, 'originalColumn', null),\n                    name: name\n                };\n            }\n        }\n        return {\n            source: null,\n            line: null,\n            column: null,\n            name: null\n        };\n    };\n    BasicSourceMapConsumer.prototype.hasContentsOfAllSources = function BasicSourceMapConsumer_hasContentsOfAllSources() {\n        if (!this.sourcesContent) {\n            return false;\n        }\n        return this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function (sc) {\n            return sc == null;\n        });\n    };\n    BasicSourceMapConsumer.prototype.sourceContentFor = function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n        if (!this.sourcesContent) {\n            return null;\n        }\n        var index = this._findSourceIndex(aSource);\n        if (index >= 0) {\n            return this.sourcesContent[index];\n        }\n        var relativeSource = aSource;\n        if (this.sourceRoot != null) {\n            relativeSource = util.relative(this.sourceRoot, relativeSource);\n        }\n        var url;\n        if (this.sourceRoot != null && (url = util.urlParse(this.sourceRoot))) {\n            var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, '');\n            if (url.scheme == 'file' && this._sources.has(fileUriAbsPath)) {\n                return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];\n            }\n            if ((!url.path || url.path == '/') && this._sources.has('/' + relativeSource)) {\n                return this.sourcesContent[this._sources.indexOf('/' + relativeSource)];\n            }\n        }\n        if (nullOnMissing) {\n            return null;\n        } else {\n            throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n        }\n    };\n    BasicSourceMapConsumer.prototype.generatedPositionFor = function SourceMapConsumer_generatedPositionFor(aArgs) {\n        var source = util.getArg(aArgs, 'source');\n        source = this._findSourceIndex(source);\n        if (source < 0) {\n            return {\n                line: null,\n                column: null,\n                lastColumn: null\n            };\n        }\n        var needle = {\n            source: source,\n            originalLine: util.getArg(aArgs, 'line'),\n            originalColumn: util.getArg(aArgs, 'column')\n        };\n        var index = this._findMapping(needle, this._originalMappings, 'originalLine', 'originalColumn', util.compareByOriginalPositions, util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND));\n        if (index >= 0) {\n            var mapping = this._originalMappings[index];\n            if (mapping.source === needle.source) {\n                return {\n                    line: util.getArg(mapping, 'generatedLine', null),\n                    column: util.getArg(mapping, 'generatedColumn', null),\n                    lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n                };\n            }\n        }\n        return {\n            line: null,\n            column: null,\n            lastColumn: null\n        };\n    };\n\n    function IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n        var sourceMap = aSourceMap;\n        if (typeof aSourceMap === 'string') {\n            sourceMap = util.parseSourceMapInput(aSourceMap);\n        }\n        var version = util.getArg(sourceMap, 'version');\n        var sections = util.getArg(sourceMap, 'sections');\n        if (version != this._version) {\n            throw new Error('Unsupported version: ' + version);\n        }\n        this._sources = new ArraySet();\n        this._names = new ArraySet();\n        var lastOffset = {\n            line: -1,\n            column: 0\n        };\n        this._sections = sections.map(function (s) {\n            if (s.url) {\n                throw new Error('Support for url field in sections not implemented.');\n            }\n            var offset = util.getArg(s, 'offset');\n            var offsetLine = util.getArg(offset, 'line');\n            var offsetColumn = util.getArg(offset, 'column');\n            if (offsetLine < lastOffset.line || offsetLine === lastOffset.line && offsetColumn < lastOffset.column) {\n                throw new Error('Section offsets must be ordered and non-overlapping.');\n            }\n            lastOffset = offset;\n            return {\n                generatedOffset: {\n                    generatedLine: offsetLine + 1,\n                    generatedColumn: offsetColumn + 1\n                },\n                consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n            };\n        });\n    }\n    IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\n    IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n    IndexedSourceMapConsumer.prototype._version = 3;\n    Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n        get: function () {\n            var sources = [];\n            for (var i = 0; i < this._sections.length; i++) {\n                for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n                    sources.push(this._sections[i].consumer.sources[j]);\n                }\n            }\n            return sources;\n        }\n    });\n    IndexedSourceMapConsumer.prototype.originalPositionFor = function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n        var needle = {\n            generatedLine: util.getArg(aArgs, 'line'),\n            generatedColumn: util.getArg(aArgs, 'column')\n        };\n        var sectionIndex = binarySearch.search(needle, this._sections, function (needle, section) {\n            var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n            if (cmp) {\n                return cmp;\n            }\n            return needle.generatedColumn - section.generatedOffset.generatedColumn;\n        });\n        var section = this._sections[sectionIndex];\n        if (!section) {\n            return {\n                source: null,\n                line: null,\n                column: null,\n                name: null\n            };\n        }\n        return section.consumer.originalPositionFor({\n            line: needle.generatedLine - (section.generatedOffset.generatedLine - 1),\n            column: needle.generatedColumn - (section.generatedOffset.generatedLine === needle.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),\n            bias: aArgs.bias\n        });\n    };\n    IndexedSourceMapConsumer.prototype.hasContentsOfAllSources = function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n        return this._sections.every(function (s) {\n            return s.consumer.hasContentsOfAllSources();\n        });\n    };\n    IndexedSourceMapConsumer.prototype.sourceContentFor = function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n        for (var i = 0; i < this._sections.length; i++) {\n            var section = this._sections[i];\n            var content = section.consumer.sourceContentFor(aSource, true);\n            if (content) {\n                return content;\n            }\n        }\n        if (nullOnMissing) {\n            return null;\n        } else {\n            throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n        }\n    };\n    IndexedSourceMapConsumer.prototype.generatedPositionFor = function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n        for (var i = 0; i < this._sections.length; i++) {\n            var section = this._sections[i];\n            if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n                continue;\n            }\n            var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n            if (generatedPosition) {\n                var ret = {\n                    line: generatedPosition.line + (section.generatedOffset.generatedLine - 1),\n                    column: generatedPosition.column + (section.generatedOffset.generatedLine === generatedPosition.line ? section.generatedOffset.generatedColumn - 1 : 0)\n                };\n                return ret;\n            }\n        }\n        return {\n            line: null,\n            column: null\n        };\n    };\n    IndexedSourceMapConsumer.prototype._parseMappings = function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n        this.__generatedMappings = [];\n        this.__originalMappings = [];\n        for (var i = 0; i < this._sections.length; i++) {\n            var section = this._sections[i];\n            var sectionMappings = section.consumer._generatedMappings;\n            for (var j = 0; j < sectionMappings.length; j++) {\n                var mapping = sectionMappings[j];\n                var source = section.consumer._sources.at(mapping.source);\n                source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n                this._sources.add(source);\n                source = this._sources.indexOf(source);\n                var name = null;\n                if (mapping.name) {\n                    name = section.consumer._names.at(mapping.name);\n                    this._names.add(name);\n                    name = this._names.indexOf(name);\n                }\n                var adjustedMapping = {\n                    source: source,\n                    generatedLine: mapping.generatedLine + (section.generatedOffset.generatedLine - 1),\n                    generatedColumn: mapping.generatedColumn + (section.generatedOffset.generatedLine === mapping.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),\n                    originalLine: mapping.originalLine,\n                    originalColumn: mapping.originalColumn,\n                    name: name\n                };\n                this.__generatedMappings.push(adjustedMapping);\n                if (typeof adjustedMapping.originalLine === 'number') {\n                    this.__originalMappings.push(adjustedMapping);\n                }\n            }\n        }\n        quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n        quickSort(this.__originalMappings, util.compareByOriginalPositions);\n    };\n\n    return {\n        SourceMapConsumer,\n        BasicSourceMapConsumer,\n        IndexedSourceMapConsumer\n    }\n});"]}