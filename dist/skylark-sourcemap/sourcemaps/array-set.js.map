{"version":3,"sources":["array-set.js"],"names":["define","util","has","Object","prototype","hasOwnProperty","hasNativeMap","Map","ArraySet","this","_array","_set","create","fromArray","aArray","aAllowDuplicates","set","i","len","length","add","size","getOwnPropertyNames","aStr","sStr","toSetString","isDuplicate","call","idx","push","indexOf","get","Error","at","aIdx","toArray","slice"],"mappings":";;;;;;;AAAAA,QAAQ,UAAW,SAAUC,GACzB,aACA,IAAIC,EAAMC,OAAOC,UAAUC,eACvBC,EAA8B,oBAARC,IAC1B,SAASC,IACLC,KAAKC,UACLD,KAAKE,KAAOL,EAAe,IAAIC,IAAQJ,OAAOS,OAAO,MA2DzD,OAzDAJ,EAASK,UAAY,SAA4BC,EAAQC,GAErD,IADA,IAAIC,EAAM,IAAIR,EACLS,EAAI,EAAGC,EAAMJ,EAAOK,OAAQF,EAAIC,EAAKD,IAC1CD,EAAII,IAAIN,EAAOG,GAAIF,GAEvB,OAAOC,GAEXR,EAASJ,UAAUiB,KAAO,WACtB,OAAOf,EAAeG,KAAKE,KAAKU,KAAOlB,OAAOmB,oBAAoBb,KAAKE,MAAMQ,QAEjFX,EAASJ,UAAUgB,IAAM,SAAsBG,EAAMR,GACjD,IAAIS,EAAOlB,EAAeiB,EAAOtB,EAAKwB,YAAYF,GAC9CG,EAAcpB,EAAeG,KAAKP,IAAIqB,GAAQrB,EAAIyB,KAAKlB,KAAKE,KAAMa,GAClEI,EAAMnB,KAAKC,OAAOS,OACjBO,IAAeX,GAChBN,KAAKC,OAAOmB,KAAKN,GAEhBG,IACGpB,EACAG,KAAKE,KAAKK,IAAIO,EAAMK,GAEpBnB,KAAKE,KAAKa,GAAQI,IAI9BpB,EAASJ,UAAUF,IAAM,SAAsBqB,GAC3C,GAAIjB,EACA,OAAOG,KAAKE,KAAKT,IAAIqB,GAErB,IAAIC,EAAOvB,EAAKwB,YAAYF,GAC5B,OAAOrB,EAAIyB,KAAKlB,KAAKE,KAAMa,IAGnChB,EAASJ,UAAU0B,QAAU,SAA0BP,GACnD,GAAIjB,EAAc,CACd,IAAIsB,EAAMnB,KAAKE,KAAKoB,IAAIR,GACxB,GAAIK,GAAO,EACP,OAAOA,MAER,CACH,IAAIJ,EAAOvB,EAAKwB,YAAYF,GAC5B,GAAIrB,EAAIyB,KAAKlB,KAAKE,KAAMa,GACpB,OAAOf,KAAKE,KAAKa,GAGzB,MAAM,IAAIQ,MAAM,IAAMT,EAAO,yBAEjCf,EAASJ,UAAU6B,GAAK,SAAqBC,GACzC,GAAIA,GAAQ,GAAKA,EAAOzB,KAAKC,OAAOS,OAChC,OAAOV,KAAKC,OAAOwB,GAEvB,MAAM,IAAIF,MAAM,yBAA2BE,IAE/C1B,EAASJ,UAAU+B,QAAU,WACzB,OAAO1B,KAAKC,OAAO0B,SAGhB5B","file":"../array-set.js","sourcesContent":["define(['./util'], function (util) {\n    'use strict';\n    var has = Object.prototype.hasOwnProperty;\n    var hasNativeMap = typeof Map !== 'undefined';\n    function ArraySet() {\n        this._array = [];\n        this._set = hasNativeMap ? new Map() : Object.create(null);\n    }\n    ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n        var set = new ArraySet();\n        for (var i = 0, len = aArray.length; i < len; i++) {\n            set.add(aArray[i], aAllowDuplicates);\n        }\n        return set;\n    };\n    ArraySet.prototype.size = function ArraySet_size() {\n        return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n    };\n    ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n        var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n        var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n        var idx = this._array.length;\n        if (!isDuplicate || aAllowDuplicates) {\n            this._array.push(aStr);\n        }\n        if (!isDuplicate) {\n            if (hasNativeMap) {\n                this._set.set(aStr, idx);\n            } else {\n                this._set[sStr] = idx;\n            }\n        }\n    };\n    ArraySet.prototype.has = function ArraySet_has(aStr) {\n        if (hasNativeMap) {\n            return this._set.has(aStr);\n        } else {\n            var sStr = util.toSetString(aStr);\n            return has.call(this._set, sStr);\n        }\n    };\n    ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n        if (hasNativeMap) {\n            var idx = this._set.get(aStr);\n            if (idx >= 0) {\n                return idx;\n            }\n        } else {\n            var sStr = util.toSetString(aStr);\n            if (has.call(this._set, sStr)) {\n                return this._set[sStr];\n            }\n        }\n        throw new Error('\"' + aStr + '\" is not in the set.');\n    };\n    ArraySet.prototype.at = function ArraySet_at(aIdx) {\n        if (aIdx >= 0 && aIdx < this._array.length) {\n            return this._array[aIdx];\n        }\n        throw new Error('No element indexed by ' + aIdx);\n    };\n    ArraySet.prototype.toArray = function ArraySet_toArray() {\n        return this._array.slice();\n    };\n    \n    return ArraySet;\n});"]}