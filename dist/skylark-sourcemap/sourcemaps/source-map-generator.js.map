{"version":3,"sources":["source-map-generator.js"],"names":["define","base64VLQ","util","ArraySet","MappingList","SourceMapGenerator","aArgs","this","_file","getArg","_sourceRoot","_skipValidation","_sources","_names","_mappings","_sourcesContents","prototype","_version","fromSourceMap","aSourceMapConsumer","sourceRoot","generator","file","eachMapping","mapping","newMapping","generated","line","generatedLine","column","generatedColumn","source","relative","original","originalLine","originalColumn","name","addMapping","sources","forEach","sourceFile","sourceRelative","has","add","content","sourceContentFor","setSourceContent","_validateMapping","String","aSourceFile","aSourceContent","Object","create","toSetString","keys","length","applySourceMap","aSourceMapPath","Error","newSources","newNames","unsortedForEach","originalPositionFor","join","aGenerated","aOriginal","aSource","aName","JSON","stringify","_serializeMappings","next","nameIdx","sourceIdx","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","result","mappings","toArray","i","len","compareByGeneratedPositionsInflated","encode","indexOf","_generateSourcesContent","aSources","aSourceRoot","map","key","hasOwnProperty","call","toJSON","version","names","sourcesContent","toString"],"mappings":"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","file":"../source-map-generator.js","sourcesContent":["define([\n    './base64-vlq',\n    './util',\n    './array-set',\n    './mapping-list'\n], function (base64VLQ, util, ArraySet, MappingList) {\n    'use strict';\n\n    function SourceMapGenerator(aArgs) {\n        if (!aArgs) {\n            aArgs = {};\n        }\n        this._file = util.getArg(aArgs, 'file', null);\n        this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n        this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n        this._sources = new ArraySet();\n        this._names = new ArraySet();\n        this._mappings = new MappingList();\n        this._sourcesContents = null;\n    }\n    SourceMapGenerator.prototype._version = 3;\n    SourceMapGenerator.fromSourceMap = function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n        var sourceRoot = aSourceMapConsumer.sourceRoot;\n        var generator = new SourceMapGenerator({\n            file: aSourceMapConsumer.file,\n            sourceRoot: sourceRoot\n        });\n        aSourceMapConsumer.eachMapping(function (mapping) {\n            var newMapping = {\n                generated: {\n                    line: mapping.generatedLine,\n                    column: mapping.generatedColumn\n                }\n            };\n            if (mapping.source != null) {\n                newMapping.source = mapping.source;\n                if (sourceRoot != null) {\n                    newMapping.source = util.relative(sourceRoot, newMapping.source);\n                }\n                newMapping.original = {\n                    line: mapping.originalLine,\n                    column: mapping.originalColumn\n                };\n                if (mapping.name != null) {\n                    newMapping.name = mapping.name;\n                }\n            }\n            generator.addMapping(newMapping);\n        });\n        aSourceMapConsumer.sources.forEach(function (sourceFile) {\n            var sourceRelative = sourceFile;\n            if (sourceRoot !== null) {\n                sourceRelative = util.relative(sourceRoot, sourceFile);\n            }\n            if (!generator._sources.has(sourceRelative)) {\n                generator._sources.add(sourceRelative);\n            }\n            var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n            if (content != null) {\n                generator.setSourceContent(sourceFile, content);\n            }\n        });\n        return generator;\n    };\n    SourceMapGenerator.prototype.addMapping = function SourceMapGenerator_addMapping(aArgs) {\n        var generated = util.getArg(aArgs, 'generated');\n        var original = util.getArg(aArgs, 'original', null);\n        var source = util.getArg(aArgs, 'source', null);\n        var name = util.getArg(aArgs, 'name', null);\n        if (!this._skipValidation) {\n            this._validateMapping(generated, original, source, name);\n        }\n        if (source != null) {\n            source = String(source);\n            if (!this._sources.has(source)) {\n                this._sources.add(source);\n            }\n        }\n        if (name != null) {\n            name = String(name);\n            if (!this._names.has(name)) {\n                this._names.add(name);\n            }\n        }\n        this._mappings.add({\n            generatedLine: generated.line,\n            generatedColumn: generated.column,\n            originalLine: original != null && original.line,\n            originalColumn: original != null && original.column,\n            source: source,\n            name: name\n        });\n    };\n    SourceMapGenerator.prototype.setSourceContent = function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n        var source = aSourceFile;\n        if (this._sourceRoot != null) {\n            source = util.relative(this._sourceRoot, source);\n        }\n        if (aSourceContent != null) {\n            if (!this._sourcesContents) {\n                this._sourcesContents = Object.create(null);\n            }\n            this._sourcesContents[util.toSetString(source)] = aSourceContent;\n        } else if (this._sourcesContents) {\n            delete this._sourcesContents[util.toSetString(source)];\n            if (Object.keys(this._sourcesContents).length === 0) {\n                this._sourcesContents = null;\n            }\n        }\n    };\n    SourceMapGenerator.prototype.applySourceMap = function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n        var sourceFile = aSourceFile;\n        if (aSourceFile == null) {\n            if (aSourceMapConsumer.file == null) {\n                throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' + 'or the source map\\'s \"file\" property. Both were omitted.');\n            }\n            sourceFile = aSourceMapConsumer.file;\n        }\n        var sourceRoot = this._sourceRoot;\n        if (sourceRoot != null) {\n            sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        var newSources = new ArraySet();\n        var newNames = new ArraySet();\n        this._mappings.unsortedForEach(function (mapping) {\n            if (mapping.source === sourceFile && mapping.originalLine != null) {\n                var original = aSourceMapConsumer.originalPositionFor({\n                    line: mapping.originalLine,\n                    column: mapping.originalColumn\n                });\n                if (original.source != null) {\n                    mapping.source = original.source;\n                    if (aSourceMapPath != null) {\n                        mapping.source = util.join(aSourceMapPath, mapping.source);\n                    }\n                    if (sourceRoot != null) {\n                        mapping.source = util.relative(sourceRoot, mapping.source);\n                    }\n                    mapping.originalLine = original.line;\n                    mapping.originalColumn = original.column;\n                    if (original.name != null) {\n                        mapping.name = original.name;\n                    }\n                }\n            }\n            var source = mapping.source;\n            if (source != null && !newSources.has(source)) {\n                newSources.add(source);\n            }\n            var name = mapping.name;\n            if (name != null && !newNames.has(name)) {\n                newNames.add(name);\n            }\n        }, this);\n        this._sources = newSources;\n        this._names = newNames;\n        aSourceMapConsumer.sources.forEach(function (sourceFile) {\n            var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n            if (content != null) {\n                if (aSourceMapPath != null) {\n                    sourceFile = util.join(aSourceMapPath, sourceFile);\n                }\n                if (sourceRoot != null) {\n                    sourceFile = util.relative(sourceRoot, sourceFile);\n                }\n                this.setSourceContent(sourceFile, content);\n            }\n        }, this);\n    };\n    SourceMapGenerator.prototype._validateMapping = function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource, aName) {\n        if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n            throw new Error('original.line and original.column are not numbers -- you probably meant to omit ' + 'the original mapping entirely and only map the generated position. If so, pass ' + 'null for the original mapping instead of an object with empty or null values.');\n        }\n        if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName) {\n            return;\n        } else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aOriginal && 'line' in aOriginal && 'column' in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource) {\n            return;\n        } else {\n            throw new Error('Invalid mapping: ' + JSON.stringify({\n                generated: aGenerated,\n                source: aSource,\n                original: aOriginal,\n                name: aName\n            }));\n        }\n    };\n    SourceMapGenerator.prototype._serializeMappings = function SourceMapGenerator_serializeMappings() {\n        var previousGeneratedColumn = 0;\n        var previousGeneratedLine = 1;\n        var previousOriginalColumn = 0;\n        var previousOriginalLine = 0;\n        var previousName = 0;\n        var previousSource = 0;\n        var result = '';\n        var next;\n        var mapping;\n        var nameIdx;\n        var sourceIdx;\n        var mappings = this._mappings.toArray();\n        for (var i = 0, len = mappings.length; i < len; i++) {\n            mapping = mappings[i];\n            next = '';\n            if (mapping.generatedLine !== previousGeneratedLine) {\n                previousGeneratedColumn = 0;\n                while (mapping.generatedLine !== previousGeneratedLine) {\n                    next += ';';\n                    previousGeneratedLine++;\n                }\n            } else {\n                if (i > 0) {\n                    if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n                        continue;\n                    }\n                    next += ',';\n                }\n            }\n            next += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn);\n            previousGeneratedColumn = mapping.generatedColumn;\n            if (mapping.source != null) {\n                sourceIdx = this._sources.indexOf(mapping.source);\n                next += base64VLQ.encode(sourceIdx - previousSource);\n                previousSource = sourceIdx;\n                next += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine);\n                previousOriginalLine = mapping.originalLine - 1;\n                next += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn);\n                previousOriginalColumn = mapping.originalColumn;\n                if (mapping.name != null) {\n                    nameIdx = this._names.indexOf(mapping.name);\n                    next += base64VLQ.encode(nameIdx - previousName);\n                    previousName = nameIdx;\n                }\n            }\n            result += next;\n        }\n        return result;\n    };\n    SourceMapGenerator.prototype._generateSourcesContent = function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n        return aSources.map(function (source) {\n            if (!this._sourcesContents) {\n                return null;\n            }\n            if (aSourceRoot != null) {\n                source = util.relative(aSourceRoot, source);\n            }\n            var key = util.toSetString(source);\n            return Object.prototype.hasOwnProperty.call(this._sourcesContents, key) ? this._sourcesContents[key] : null;\n        }, this);\n    };\n    SourceMapGenerator.prototype.toJSON = function SourceMapGenerator_toJSON() {\n        var map = {\n            version: this._version,\n            sources: this._sources.toArray(),\n            names: this._names.toArray(),\n            mappings: this._serializeMappings()\n        };\n        if (this._file != null) {\n            map.file = this._file;\n        }\n        if (this._sourceRoot != null) {\n            map.sourceRoot = this._sourceRoot;\n        }\n        if (this._sourcesContents) {\n            map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n        }\n        return map;\n    };\n    SourceMapGenerator.prototype.toString = function SourceMapGenerator_toString() {\n        return JSON.stringify(this.toJSON());\n    };\n\n    return SourceMapGenerator;\n\n});"]}